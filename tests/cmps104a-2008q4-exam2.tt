CMPS-104A · Compiler Design I · Fall 2008 · Test #2          page 1 of 3
$Id: cmps104a-2008q4-exam2.mm,v 8.32 2008-11-07 13:31:46-08 - - $

.PS
examboxes(3,30)
.PE

No books;  No calculator;  No computer;  No email;  No internet;  No
notes;  No phone.  Neatness counts!  Do your scratch work elsewhere and
enter only your final answer into the spaces provided.

.EQ
delim $$
.EN

 1. Given the grammar presented here, and using the style from the
    LALR(1) handout:
     (a) Construct the characteristic finite state machine (CFSM), sets
         of items and transition diagram, showing shifts, reductions,
         and acceptance.  [6pt]
     (b) Construct the FOLLOW sets.  [3pt]
     (c) Answer yes or no to each of the following questions:  [1pt]

         Is the grammar LR(0)?  __________    Is the grammar SLR(1)?
         __________

    +-----------------+
    |0.  S -> $ E $   |
    |1.  E -> f ( A ) |
    |2.  E -> x       |
    |3.  A -> E A     |
    |4.  A ->         |
    +-----------------+

 2. Using bison, write a grammar to parse the following language.  Do
    not show any semantic actions.  Show only required declarations in
    section 1 (before the first %%), and grammar rules (between the
    first and second %%).  Don't rearrange the grammar for the
    convenience of the AST constructor.  Use left-associative rules
    wherever possible.  Use right-associative rules only when necessary.
    For that part of this language which is poorly specified, assume the
    rules of C.  [5pt]
     (a) A program is a sequence of one or more statements.
     (b) A statement is an if statement or an expression.
     (c) An if statement is the keyword if, followed by an expression in
         parentheses, followed by a statement.
     (d) An if statement may optionally be followed by the keyword else
         and another statement.
     (e) An expression is an identifier (which is a token) or a function
         call.
     (f) A function call is an identifier, followed by a comma-separated
         list of zero or more expressions inside parentheses.

 3. Draw the abstract syntax trees for each of the following code
    fragments.  Assume the specifications of the parser project.  [3pt]

    +---------------------+----------------------+----------------------+
    |if (a < b) {         | int f (int i) {      | a = b * (c + d * e); |
    |   m = x * b;        |    return i * 3 + 2; |                      |
    |   f (x);            | }                    |                      |
    |}                    |                      |                      |
    |                     |                      |                      |
    |                     |                      |                      |
    |                     |                      |                      |
    |                     |                      |                      |
    |                     |                      |                      |
    |                     |                      |                      |
    |                     |                      |                      |
    |                     |                      |                      |
    +---------------------+----------------------+----------------------+

 4. Using flex, define the following macros (section 1 before the first
    %%):  [2pt]
     (a) A FRACTION consists of one or more decimal digits, with an
         optional decimal point.  The decimal point may precede all
         digits, follow all digits, or be between a pair of digits.
     (b) An EXPONENT consists of the letter E or e (upper or lower
         case), followed by an optional plus or minus sign, followed by
         one or more decimal digits.

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

 1. The scanner yylex passes semantic information to the parser yyparse
    using the exterinal variable:
    (A) yydebug
    (B) yyerror
    (C) yylval
    (D) yytext

 2. Which statement is true about these languages?
    (A) $ LR ( 0 ) subset LALR ( 1 ) subset SLR ( 1 ) subset LR ( 1 )  $
    (B) $ LR ( 0 ) subset LR ( 1 ) subset SLR ( 1 ) subset LALR ( 1 )  $
    (C) $ LR ( 0 ) subset SLR ( 1 ) subset LALR ( 1 ) subset LR ( 1 )  $
    (D) $ LR ( 1 ) subset LALR ( 1 ) subset SLR ( 1 ) subset LR ( 0 )  $

 3. The grammar
    $ A ~ -> ~ A x y z $
    $ A ~ -> ~ p q r $
    (A) is LR(0) but not SLR(1).
    (B) is SLR(1) but not LR(0).
    (C) is both LR(0) and SLR(1).
    (D) is neither LR(0) nor SLR(1).

 4. If there are $n$ symbols in a regular expression, what is the worst
    possible number of states in the DFA?
    (A) $ O ( 2 sup n ) $
    (B) $ O ( n ) $
    (C) $ O ( n log sub 2 n ) $
    (D) $ O ( n sup 2 ) $

 5. The flex expression ab|c* means:
    (A) ((ab)|c)*
    (B) (a(b|c))*
    (C) (ab)|(c*)
    (D) a((b|c)*)

 6. Which of the following grammars is unambiguous, and will use up the
    most stack space when parsed with an LR(1) parser?
    (A) $ A ~ -> ~ A A $
        $ A ~ -> ~ x $
    (B) $ A ~ -> ~ A x $
        $ A ~ -> ~ x $
    (C) $ A ~ -> ~ x A $
        $ A ~ -> ~ x $
    (D) $ A ~ -> ~ x x $
        $ A ~ -> ~ x $

 7. We should shift if the precedence of the lookahead symbol is (x)
    than the precedence of the rule at the top of the stack;  or if they
    have the same precedence and are (y) associative.
    (A) (x) = higher, (y) = left.
    (B) (x) = higher, (y) = right.
    (C) (x) = lower, (y) = left.
    (D) (x) = lower, (y) = right.

 8. What is an example of an input that will be accepted by the
    following context free grammar?
    $ A ~ -> ~ A x $
    $ A ~ -> ~ y $
    (A) $ xxxxxxxxy $
    (B) $ xyyyyyyyy $
    (C) $ yxxxxxxxx $
    (D) $ yyyyyyyyx $

 9. An LR(1) parse table has one row for each state.  The size of what
    set describes the number of columns?
    (A) $ V sub N $
    (B) $ V sub N inter V sub T $
    (C) $ V sub N union V sub T $
    (D) $ V sub T $

10. Which of the following items in a state will cause a reduction?
    (A) $ E ~ -> ~ · ~ E + T $
    (B) $ E ~ -> ~ E ~ · ~ + T $
    (C) $ E ~ -> ~ E + ~ · ~ T $
    (D) $ E ~ -> ~ E + T ~ · $

11. What do the following statements do?
    x = 3,14; y = (3,14);
    Note:  commas, not periods.
    (A) x = 14; y = 14;
    (B) x = 14; y = 3;
    (C) x = 3; y = 14;
    (D) x = 3; y = 3;

____________________

   Total:  31 *

